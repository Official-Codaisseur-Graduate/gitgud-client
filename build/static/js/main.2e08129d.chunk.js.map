{"version":3,"sources":["img/git--gud-A-green.svg","img/git--gud-B-yellowgreen.svg","img/git--gud-C-yellow.svg","img/git--gud-D-orange.svg","img/git--gud-E-red.svg","img/checked.svg","img/cancel.svg","gql.js","components/ProgressBar.js","logic.js","components/RepoStats.js","components/Chart.js","components/ProfileStats.js","components/Loader.js","components/Form.js","components/LandingPage.js","components/FormContainer.js","components/FeedbackButton.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_USER_DATA","gql","_templateObject","MultiColorProgressBar","react","className","this","props","username","score","react_default","a","createElement","src","require","alt","profileScore","repoScore","style","width","color","React","Content","posed","div","closed","height","open","Tabs","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkDataSet","event","target","dataset","id","setState","state","name","ulOpen","_onTabClick","evt","targetTabID","tabs","map","element","i","isActive","_tabsData","repos","_this2","key","item","tabActivityModifier","concat","content","onClick","totalRepoScore","data-name","data-id","description","pose","repoReadMe","gitIgnoreScore","branchScore","hasMasterBranch","hasDevelopmentBranch","hasFeatBranch","hasThreeBranches","useDescriptiveNames","totalScore","commitScore","containsAND","containsPeriod","lengthExceeds","upperCase","Fragment","Component","ChartContainer","getProfileScore","array","scores","el","toConsumableArray","currentProfileScore","getGitScore","gitScore","currentGitScore","getDates","options","year","month","day","dates","Date","parseInt","createdAt","toLocaleDateString","chart","type","stacked","zoom","enabled","colors","responsive","breakpoint","legend","position","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","previousScores","fill","opacity","series","data","react_apexcharts_min_default","icon","value","ProfileStats","console","log","profileStats","user","components_ProgressBar","stats","totalPinnedRepos","averageBranchPerRepo","averageCommitPerBranch","length","Chart_ChartContainer","bio","email","isHireable","location","picture","websiteUrl","pinnedRepositories","href","rel","repoNames","RepoStats_Tabs","Loader","aria-busy","aria-label","role","Form","onSubmit","placeholder","onChange","react_apollo_esm","query","skip","variables","_ref","loading","error","Loader_Loader","ProfileStats_ProfileStats","LandingPage","FormContainer","search","preventDefault","landingPage","LandingPage_LandingPage","FeebackButton","window","App","FormContainer_FormContainer","Boolean","hostname","match","httpLink","uri","client","ApolloClient","link","HttpLink","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e08129d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/git--gud-A-green.2eff5f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/git--gud-B-yellowgreen.a86ab6e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/git--gud-C-yellow.e9dd50e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/git--gud-D-orange.94121b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/git--gud-E-red.69bc71d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.4190ac11.svg\";","module.exports = __webpack_public_path__ + \"static/media/cancel.4707e09c.svg\";","import gql from 'graphql-tag';\n\n\nexport const GET_USER_DATA = gql`\n                  query GetUser($username: String!) {\n                    user(username: $username ) {\n                      username,\n                      score,\n                      averageRepoScore,\n                      profileScore,\n                      repoScore\n                      previousScores {\n                        profileScore,\n                        gitScore,\n                        createdAt\n                      }\n                      profileStats {\n                        bio,\n                        email,\n                        isHireable,\n                        location,\n                        name,\n                        websiteUrl,\n                        pinnedRepositories,\n                        picture\n                      },\n                      stats {\n                        totalPinnedRepos,\n                        averageBranchPerRepo,\n                        averageCommitPerBranch\n                        repoNames {\n                          name\n                          owner\n                          totalRepoScore\n                          repoReadMe\n                          gitIgnoreScore\n                          description\n                          commitScore{\n                            lengthExceeds\n                            containsAND\n                            containsPeriod\n                            upperCase\n                            totalScore\n                          }\n                          branchScore {\n                            hasThreeBranches\n                            hasMasterBranch\n                            hasDevelopmentBranch\n                            hasFeatBranch\n                            useDescriptiveNames\n                            totalScore\n                          }\n                        }\n                      }\n                    }\n                  }\n                  `;","import * as React from \"react\";\nimport './ProgressBar.css';\nimport {badge} from '../logic';\n\nclass MultiColorProgressBar extends React.Component {\n  \n  render() {\n\n    return (\n      <div className=\"progressbar\">\n      <div className=\"progressbar__header-container\">\n        <p className='logo logo-small'>{this.props.username}</p>\n        {badge(this.props.score)}\n        <h1> Profile strength: {this.props.profileScore + this.props.repoScore}% </h1>\n      </div>\n      <div className=\"progressbar__bar\">\n        <div className=\"progressbar__profile\" style={{'width': this.props.profileScore + '%'}}></div>\n        <div className=\"progressbar__repos\" style={{ 'width': this.props.repoScore + '%'}}></div>\n        <div className=\"progressbar__rest\" style={{'color': 'grey', 'width': 100-(this.props.repoScore + this.props.profileScore) + '%'}}></div>\n      </div>\n    \n      <div className=\"progressbar__labels\">\n        <p className=\"progressbar__label  progressbar__label--profile\">\n          GitHub Profile — <span>{this.props.profileScore}</span>%\n        </p>\n        <p className=\"progressbar__label  progressbar__label--repos\">\n          Git Use — <span>{this.props.repoScore}</span>%\n        </p>\n      </div>\n    </div>\n    );\n  }\n}\n\n\n\nexport default MultiColorProgressBar;","import React from 'react';\nexport const badge = score => {\n  if (score >= 90) return (<img className=\"progressbar__badge\" src={require(\"./img/git--gud-A-green.svg\")} alt='A'/>) \n  if (score > 75) return (<img className=\"progressbar__badge\" src={require(\"./img/git--gud-B-yellowgreen.svg\")} alt='B'/>)\n  if (score > 50) return (<img className=\"progressbar__badge\" src={require(\"./img/git--gud-C-yellow.svg\")} alt='C'/>) \n  if (score > 30) return (<img className=\"progressbar__badge\" src={require(\"./img/git--gud-D-orange.svg\")} alt='D'/>)\n  return (<img className=\"progressbar__badge\" src={require(\"./img/git--gud-E-red.svg\")} alt='E'/>) \n}\n","import React from 'react';\nimport './RepoStats.css';\nimport posed from 'react-pose';\n\nconst Content = posed.div({\n  closed: { height: 0 },\n  open: { height: 'auto' }\n});\n\n\n\n\nconst TAB_ACTIVITY_MODIFIER = `tabs-list__tab--active`;\n\nexport default class Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this._tabsData = props.repos;\n    \n    this.state = {\n      tabs: this._tabsData.map((element, i) => ({isActive: (i === 0)})),\n      open: false, \n      ulOpen: \"ul-1\"\n    };\n  }\n\n  checkDataSet = (event) => {\n    if(event.target.dataset.id)\n       this.setState({ open: this.state.open === event.target.dataset.id ? false : +event.target.dataset.id })\n    if(event.target.dataset.name) {\n      this.setState({ ulOpen: this.state.ulOpen === event.target.dataset.name ? event.target.dataset.name : event.target.dataset.name })\n    }\n  }\n  \n\n  render() {\n    return (\n      <dl className=\"tabs-list\" key=\"tabs-list\">\n        \n      {this._tabsData.map((item, i) => {\n      const tabActivityModifier = this.state.tabs[i].isActive ? ` ${TAB_ACTIVITY_MODIFIER}` : ``;\n          \n      let content =  <div onClick={this.checkDataSet}>\n          <h3>Total Repository score: {item.totalRepoScore}%</h3>\n          <p className=\"stats__description\"> This is accumulated based on following factors: </p>\n            <div className=\"stats__repos\">\n              <ul data-name=\"ul-1\" className={\"stats__header \" + (this.state.ulOpen === \"ul-1\" ? \"stats__header--active\" : \"\")}> General\n                <li> \n                  <ul className={\"stats-breakdown \" + (this.state.ulOpen === \"ul-1\" ? \"stats-breakdown--active\" : \"\")}>\n                    <li data-id={i+1} className={this.state.open === i+1 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Description: {!item.description ? '0%': '100%'}\n                      <Content className=\"content\" pose={this.state.open === i+1 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> Although there isn’t a format for a good repository description, it is a way to provide a summary of a where the project is about and which stack and tools are used. It is show on your main page below the repository name.</div>\n                      </Content>\n                    </li>\n                    <li data-id={i+2} className={this.state.open === i+2 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Readme: {item.repoReadMe < 100 ? \"0%\": '100%'}\n                      <Content className=\"content\" pose={this.state.open === i+2 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> A README file is important to your repository because it tells other people why your project is useful, what they can do with your project, and how they can use it. Without a readme, no one is going to look at you code.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+3} className={this.state.open === i+3 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Gitignore: {item.gitIgnoreScore < 100 ? \"0%\": '100%'}\n                      <Content className=\"content\" pose={this.state.open === i+3 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> A .gitignore file is used to for GIT to know which files to ignore before making a commit. It is, for example, very important to include your /node_modelus because when running npm install to start your app node will install different versions depending on the computer you work.  \n                        </div>\n                      </Content>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n              <ul data-name=\"ul-2\" className={\"stats__header \" + (this.state.ulOpen === \"ul-2\" ? \"stats__header--active\" : \"\")}> Branches\n              <li>\n                <ul className={\"stats-breakdown \" + (this.state.ulOpen === \"ul-2\" ? \"stats-breakdown--active\" : \"\")}>\n                    <li data-id={i+5} className={this.state.open === i+5 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Master branch: {item.branchScore.hasMasterBranch}\n                      <Content className=\"content\" pose={this.state.open === i+5 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> ‘master’ is considered to be the main branch where the source code of HEAD always reflects a production-ready state.\n                        </div>\n                      </Content>\n                    </li>\n                    \n                    <li data-id={i+6} className={this.state.open === i+6 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Development branch: {item.branchScore.hasDevelopmentBranch}%:\n                      <Content className=\"content\" pose={this.state.open === i+6 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> ‘development’ is considered to be the main branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release. Some would call this the “integration branch”. \n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+7} className={this.state.open === i+7 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Feature branches: {item.branchScore.hasFeatBranch}%\n                      <Content className=\"content\" pose={this.state.open === i+7 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> feature branches are among the ‘supporting branches’. These branches are you to work on features and unlike the main branches, these branches always have a limited life time, since they will be removed eventually.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+8} className={this.state.open === i+8 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Number of branches: {item.branchScore.hasThreeBranches}%\n                      <Content className=\"content\" pose={this.state.open === i+8 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> You should have at least three branches on your repository.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+9} className={this.state.open === i+9 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Naming: {item.branchScore.useDescriptiveNames}%\n                      <Content className=\"content\" pose={this.state.open === i+9 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> All branches, including supporting branches have naming conventions. They should start with master, development, feature, bug, hotfix or junk. \n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+4} className=\"stats-breakdown__points\"> Total branches score: {item.branchScore.totalScore}%\n                  </li>\n                  </ul>  \n                </li>\n              </ul>\n              <ul data-name=\"ul-3\" className={\"stats__header \" + (this.state.ulOpen === \"ul-3\" ? \"stats__header--active\" : \"\")}> Commits \n                <li>\n                  <ul className={\"stats-breakdown \" + (this.state.ulOpen === \"ul-3\" ? \"stats-breakdown--active\" : \"\")}>\n                    <li data-id={i+11} className={this.state.open === i+11 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Commits with \"and\": {item.commitScore.containsAND}%\n                      <Content className=\"content\" pose={this.state.open === i+11 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> If you have to add an “and” in your commit message, you’ve already committed too much.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+12} className={this.state.open === i+12 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Commits with period: {item.commitScore.containsPeriod}%\n                      <Content className=\"content\" pose={this.state.open === i+12 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> Don’t end the commit with a period. Save your characters.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+13} className={this.state.open === i+13 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> Length of commits: {item.commitScore.lengthExceeds}%\n                      <Content className=\"content\" pose={this.state.open === i+13 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> The commit title should be less than 50 characters. Shorter things are easier to read. \n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+14} className={this.state.open === i+14 ? 'stats-breakdown__item--active' : 'stats-breakdown__item'}> First word of commit starting with uppercase {item.commitScore.upperCase}%\n                      <Content className=\"content\" pose={this.state.open === i+14 ? 'open' : 'closed'}>\n                        <div className=\"content-wrapper\"> This is seen as generally good conduct by most gitsperts. Sentence case is also more professional looking and easier to read.\n                        </div>\n                      </Content>\n                    </li>\n                    <li data-id={i+10} className=\"stats-breakdown__points\"> Total commits score: {item.commitScore.totalScore}% </li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </div>\n      ;\n\n          return (\n            <React.Fragment key={\"tabgroup-\" + i}>\n              <dt className={\"tabs-list__tab\" + tabActivityModifier}\n                  onClick={this._onTabClick}\n                  key={\"tablink-\" + i}\n                  data-id={i}>\n                {item.name}\n              </dt>\n              <dd className=\"tabs-list__content\" key={\"tabcontent-\" + i}>{content}</dd>\n            </React.Fragment>\n          );\n        })}\n        \n      </dl>\n    );\n  }\n  \n  _onTabClick = (evt) => {\n    const targetTabID = +evt.target.dataset.id;\n    \n    this.setState({\n      tabs: this.state.tabs.map((element, i) => ({isActive: (targetTabID === i)}))\n    });\n  }\n}\n\n","import Chart from \"react-apexcharts\";\nimport * as React from \"react\";\n\nexport default class ChartContainer extends React.Component {\n  getProfileScore = array => {\n    const scores = array.map(el => el.profileScore);\n    return [...scores, this.props.currentProfileScore];\n  };\n\n  getGitScore = array => {\n    const scores = array.map(el => el.gitScore);\n    return [...scores, this.props.currentGitScore];\n  };\n\n  getDates = array => {\n    const options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\n    const dates = array.map(el =>\n      new Date(parseInt(el.createdAt)).toLocaleDateString(\"en-GB\", options)\n    );\n    return [...dates, new Date().toLocaleDateString(\"en-GB\", options)];\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          width: 350,\n          type: \"bar\",\n          stacked: true,\n          zoom: {\n            enabled: true\n          }\n        },\n        colors: ['#37867E', '#99EE86'],\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: \"bottom\",\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }\n        ],\n        plotOptions: {\n          bar: {\n            horizontal: false\n          }\n        },\n        xaxis: {\n          categories: this.getDates(this.props.previousScores)\n        },\n        legend: {\n          position: \"top\",\n          offsetY: 0\n        },\n        fill: {\n          opacity: 1\n        }\n      },\n      series: [\n        {\n          name: \"Profile score\",\n          data: this.getProfileScore(this.props.previousScores)\n        },\n        {\n          name: \"Git Use score\",\n          data: this.getGitScore(this.props.previousScores)\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={this.state.options}\n              series={this.state.series}\n              type=\"bar\"\n              height=\"350\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport \"./ProfileStats.css\";\nimport ProgressBar from \"./ProgressBar\";\nimport RepoStats from \"./RepoStats\";\nimport Chart from \"./Chart\";\n\nconst icon = value => {\n  if (value)\n    return (\n      <img\n        src={require(\"../img/checked.svg\")}\n        alt=\"checked\"\n        width=\"30px\"\n        height=\"30px\"\n      />\n    );\n  return (\n    <img\n      src={require(\"../img/cancel.svg\")}\n      alt=\"not-checked\"\n      width=\"30px\"\n      height=\"30px\"\n    />\n  );\n};\n\nexport default function ProfileStats(props) {\n  console.log(props)\n  const profileStats = props.user.profileStats;\n  return (\n    <div className=\"row\">\n      <div className=\"col-1-of-3\">\n        <ProgressBar\n          username={props.user.username}\n          profileScore={props.user.profileScore}\n          repoScore={props.user.repoScore}\n          score={props.user.score}\n        />\n        {props.user && props.user.stats.totalPinnedRepos !== null && (\n          <section className=\"stats__average\">\n            <h2> GitHub & Git statistics </h2>\n            <p>\n              {\" \"}\n              Total pinned repositories: {\n                props.user.stats.totalPinnedRepos\n              }{\" \"}\n            </p>\n            <p>\n              {\" \"}\n              Average number of branches:{\" \"}\n              {props.user.stats.averageBranchPerRepo}\n            </p>\n            <p>\n              {\" \"}\n              Average commits per branch:{\" \"}\n              {props.user.stats.averageCommitPerBranch}\n            </p>\n          </section>\n        )}\n        {props.user.previousScores && props.user.previousScores.length > 0 && (\n          <Chart\n            previousScores={props.user.previousScores}\n            currentProfileScore={props.user.profileScore}\n            currentGitScore={props.user.repoScore}\n          />\n        )}\n      </div>\n      <div className=\"col-2-of-3\">\n        <section className=\"stats__profile\">\n          <h2 className=\"stats__profile-header\"> Profile Statistics </h2>\n          {props.user && props.user.profileStats !== 0 && (\n            <div className=\"stats__profile-container\">\n              <div className=\"stats__profile-item\" key=\"bio\">\n                {icon(profileStats.bio)}\n                <p className=\"stats__item-name\">Bio</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"email\">\n                {icon(profileStats.email)}\n                <p className=\"stats__item-name\">Email</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"isHireable\">\n                {icon(profileStats.isHireable)}\n                <p className=\"stats__item-name\">Available for hire</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"location\">\n                {icon(profileStats.location)}\n                <p className=\"stats__item-name\">Location</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"name\">\n                {icon(profileStats.name)}\n                <p className=\"stats__item-name\">Name</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"picture\">\n                {icon(profileStats.picture)}\n                <p className=\"stats__item-name\">Profile photo</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"website\">\n                {icon(profileStats.websiteUrl)}\n                <p className=\"stats__item-name\">Personal website</p>\n              </div>\n              <div className=\"stats__profile-item\" key=\"pinnedRepositories\">\n                {icon(profileStats.pinnedRepositories)}\n                <p className=\"stats__item-name\">Pinned repositories</p>\n              </div>\n            </div>\n          )}\n          {props.user.profileScore < 49 && (\n            <p className=\"stats__improve\">\n              To improve your GitHub appearence manage your{\" \"}\n              <a\n                className=\"stats__link\"\n                href=\"https://github.com/settings/profile\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                settings\n              </a>\n            </p>\n          )}\n        </section>\n\n        {props.user && props.user.stats.totalPinnedRepos !== null && (\n          <section className=\"stats__pinnedRepos\">\n            <h2> Git Use </h2>\n            <p>Click to check your detailed feedback per repository</p>\n            {props.user.stats.repoNames && (\n              <RepoStats repos={props.user.stats.repoNames} />\n            )}\n          </section>\n        )}\n\n        {props.user && !props.user.stats.totalPinnedRepos && (\n          <p> Please add some pinned repositories </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport './Loader.css';\n\nexport default function Loader () { \n  return (\n    <div aria-busy=\"true\" aria-label=\"Loading\" role=\"progressbar\" className=\"container\">\n  <div className=\"swing\">\n    <div className=\"swing-l\"></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div className=\"swing-r\"></div>\n  </div>\n  <div className=\"shadow\">\n    <div className=\"shadow-l\"></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div className=\"shadow-r\"></div>\n  </div>\n </div>\n  )\n}","import * as React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { GET_USER_DATA } from \"../gql\";\nimport ProfileStats from \"./ProfileStats\";\nimport Loader from \"./Loader\";\n\nexport default function Form(props) {\n  return (\n    <div>\n      <form className=\"form\" onSubmit={props.onSubmit}>\n        <input\n          className=\"form__username\"\n          type=\"text\"\n          name=\"search\"\n          id=\"1\"\n          placeholder=\"enter your username\"\n          onChange={props.onChange}\n        />\n        <button className=\"form__submit\" type=\"submit\">\n          {\" \"}\n          Go!{\" \"}\n        </button>\n      </form>\n      <Query\n        query={GET_USER_DATA}\n        skip={props.username === ``}\n        variables={{ username: props.username }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <Loader />;\n\n          if (error)\n            return (\n              <div className=\"errorBox\">\n                <p>Please submit valid username </p>\n              </div>\n            );\n\n          return <div> {data && <ProfileStats user={data.user} />}</div>;\n        }}\n      </Query>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport \"./LandingPage.css\";\n\nexport default function LandingPage(props) {\n  return (\n    <section className=\"landing-page\">\n      <div className=\"landing-page__header\">\n        <p className='logo'>GitGud</p>\n        <p>A validator of your GitHub profile and Git use </p>\n        <p>\n          designed to provide feedback for job seekers and graduated students\n        </p>\n      </div>\n      <div className=\"landing-page__description\">\n        <h2>HOW</h2>\n        <p>\n          <b>First it checks your public profile</b> - A good GitHub profile can\n          impress the interviewer.\n        </p>\n        <b>Second it validates your pinned repositories on how you use Git</b>-\n        Proper use of version control with Git can show that you are a\n        structured worker and is able to work in development teams. We chose to\n        focus on your pinned repos because you can present certain project as\n        you portfolio for potential employers\n      </div>\n      <div className=\"landing-page__description\">\n        <h2>WHY</h2>\n        <p>\n          You can use GitHub as your resume for job hunting. For developers it\n          is important to code regularly, be able to work in teams, communicate\n          properly and contiue with a learning curve. Obviously this is\n          something you say you can do and write it on your resume, but with\n          GitHub you are able to show that you can do this. Which will give you\n          headsup on your next interview.\n        </p>\n        <p>\n          Unfortunately many recent graduates or job seekers lack a proper\n          GitHub profile. And as Codaisseur teachers can acknowledge, the\n          feedback seems repetitive. Therefore we developed this tool to provide\n          this feedback which is based on various resources accross the internet\n          and using live data from the GitHub API.{\" \"}\n        </p>\n      </div>\n\n      <div className=\"landing-page__description\">\n        <h2>WHO</h2>\n        <p>\n          As three graduates of the Codaisseur Academy in Amsterdam we developed\n          this tool from scratch with Rein op ‘t Land - a teacher and developer\n          at Codaisseur - who acted as our Product Owner\n        </p>\n        <h2 className=\"contributors\">CONTRIBUTORS</h2>\n        <div className=\" profiles\">\n          <div className=\"profile\">\n            <img\n              src=\"https://media.licdn.com/dms/image/C4D03AQHZVf98b8_9rQ/profile-displayphoto-shrink_800_800/0?e=1560988800&v=beta&t=GJsvLqPTRx9mVyd6mJV-vfNWvZiWeTfkMRM12kTgnh0\"\n              alt=\"Oleksandra\"\n            />\n            <h3>Oleksandra Akulshyna</h3>\n\n            <a\n              href=\"https://www.linkedin.com/in/akulshyna/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              LinkedIn\n            </a>\n            <a\n              href=\"https://github.com/w3bgir1\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              GitHub\n            </a>\n          </div>\n\n          <div className=\"profile\">\n            <img\n              src=\"https://media.licdn.com/dms/image/C4E03AQHbh18z_ce4NA/profile-displayphoto-shrink_200_200/0?e=1560988800&v=beta&t=Sdjy4ObNeIBXtc4oVvJOeSUeG6oXsw8_0K0pKRwRYZM\"\n              alt=\"Vincent\"\n            />\n            <h3>Vincent de Graaf</h3>\n            <a\n              href=\"https://www.linkedin.com/in/vincent-de-graaf-7a5375a4/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              LinkedIn\n            </a>\n            <a\n              href=\"https://github.com/vdegraaf\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              GitHub\n            </a>\n          </div>\n\n          <div className=\"profile\">\n            <img\n              src=\"https://media.licdn.com/dms/image/C4D03AQFJAEpuEOJn2A/profile-displayphoto-shrink_800_800/0?e=1560988800&v=beta&t=Pfb7rIZKrgWPpbpcfP7Q9mVhO1mui-t5HSrgzXe6Bgc\"\n              alt=\"Natalia\"\n            />\n            <h3>Natalia Volchatova</h3>\n            <a\n              href=\"https://www.linkedin.com/in/nataliavolchatova/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              LinkedIn\n            </a>\n            <a\n              href=\"https://github.com/Klackky\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              GitHub\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport Form from \"./Form\";\nimport \"./Form.css\";\nimport LandingPage from './LandingPage'\n\nexport default class FormContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      username: \"\",\n      landingPage: true\n    };\n  }\n\n  onChange = event => {\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      username: this.state.search,\n      landingPage: false\n    });\n\n  };\n\n  render() {\n    if(this.state.landingPage){\n    return (\n      <div>\n      <Form\n        username={this.state.username}\n        onSubmit={this.onSubmit}\n        onChange={this.onChange}\n      />\n      <LandingPage />\n      </div>\n    );\n  } else return <Form\n      username={this.state.username}\n      onSubmit={this.onSubmit}\n      onChange={this.onChange}\n    />\n  }\n}\n","\nimport * as React from 'react';\nimport './FeedbackButton.css';\n\nexport default function FeebackButton () { \n\n  const issuePage = () => {\n    window.open('https://github.com/Official-Codaisseur-Graduate/git-gud/issues', '_blank');\n};\n\n  return (\n    <button id=\"popup\" className=\"feedback-button\" onClick={() => issuePage()}>Feedback</button>\n  )    \n\n}","import React, { Component } from 'react';\nimport FormContainer from './components/FormContainer';\nimport FeedbackButton from './components/FeedbackButton'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <FormContainer />\n      <FeedbackButton />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst url = `https://gitgudserver.herokuapp.com/graphql`\n\nconst httpLink = {\n  uri: url\n};\n\nconst defaultOptions = {\n  watchQuery: {\n    fetchPolicy: 'network-only'\n  },\n  query: {\n    fetchPolicy: 'network-only'\n  },\n}\n\nconst client = new ApolloClient({\n  link: new HttpLink(httpLink),\n  cache: new InMemoryCache(),\n  defaultOptions: defaultOptions\n});\n\n\nReactDOM.render(<ApolloProvider client={client}><App/></ApolloProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}