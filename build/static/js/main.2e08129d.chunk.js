(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{42:function(e,t,a){e.exports=a(75)},47:function(e,t,a){},48:function(e,t,a){},49:function(e,t,a){},50:function(e,t,a){e.exports=a.p+"static/media/git--gud-A-green.2eff5f8a.svg"},51:function(e,t,a){e.exports=a.p+"static/media/git--gud-B-yellowgreen.a86ab6e6.svg"},52:function(e,t,a){e.exports=a.p+"static/media/git--gud-C-yellow.e9dd50e4.svg"},53:function(e,t,a){e.exports=a.p+"static/media/git--gud-D-orange.94121b7b.svg"},54:function(e,t,a){e.exports=a.p+"static/media/git--gud-E-red.69bc71d4.svg"},55:function(e,t,a){},61:function(e,t,a){e.exports=a.p+"static/media/checked.4190ac11.svg"},62:function(e,t,a){e.exports=a.p+"static/media/cancel.4707e09c.svg"},63:function(e,t,a){},69:function(e,t,a){},70:function(e,t,a){},71:function(e,t,a){},75:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a.n(r),s=a(30),o=a.n(s),c=(a(47),a(9)),i=a(10),l=a(12),m=a(11),p=a(13),d=a(21),u=a(31),h=a(32);function b(){var e=Object(u.a)(["\n                  query GetUser($username: String!) {\n                    user(username: $username ) {\n                      username,\n                      score,\n                      averageRepoScore,\n                      profileScore,\n                      repoScore\n                      previousScores {\n                        profileScore,\n                        gitScore,\n                        createdAt\n                      }\n                      profileStats {\n                        bio,\n                        email,\n                        isHireable,\n                        location,\n                        name,\n                        websiteUrl,\n                        pinnedRepositories,\n                        picture\n                      },\n                      stats {\n                        totalPinnedRepos,\n                        averageBranchPerRepo,\n                        averageCommitPerBranch\n                        repoNames {\n                          name\n                          owner\n                          totalRepoScore\n                          repoReadMe\n                          gitIgnoreScore\n                          description\n                          commitScore{\n                            lengthExceeds\n                            containsAND\n                            containsPeriod\n                            upperCase\n                            totalScore\n                          }\n                          branchScore {\n                            hasThreeBranches\n                            hasMasterBranch\n                            hasDevelopmentBranch\n                            hasFeatBranch\n                            useDescriptiveNames\n                            totalScore\n                          }\n                        }\n                      }\n                    }\n                  }\n                  "]);return b=function(){return e},e}var g=a.n(h)()(b()),E=(a(48),a(49),function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return r.createElement("div",{className:"progressbar"},r.createElement("div",{className:"progressbar__header-container"},r.createElement("p",{className:"logo logo-small"},this.props.username),(e=this.props.score)>=90?n.a.createElement("img",{className:"progressbar__badge",src:a(50),alt:"A"}):e>75?n.a.createElement("img",{className:"progressbar__badge",src:a(51),alt:"B"}):e>50?n.a.createElement("img",{className:"progressbar__badge",src:a(52),alt:"C"}):e>30?n.a.createElement("img",{className:"progressbar__badge",src:a(53),alt:"D"}):n.a.createElement("img",{className:"progressbar__badge",src:a(54),alt:"E"}),r.createElement("h1",null," Profile strength: ",this.props.profileScore+this.props.repoScore,"% ")),r.createElement("div",{className:"progressbar__bar"},r.createElement("div",{className:"progressbar__profile",style:{width:this.props.profileScore+"%"}}),r.createElement("div",{className:"progressbar__repos",style:{width:this.props.repoScore+"%"}}),r.createElement("div",{className:"progressbar__rest",style:{color:"grey",width:100-(this.props.repoScore+this.props.profileScore)+"%"}})),r.createElement("div",{className:"progressbar__labels"},r.createElement("p",{className:"progressbar__label  progressbar__label--profile"},"GitHub Profile \u2014 ",r.createElement("span",null,this.props.profileScore),"%"),r.createElement("p",{className:"progressbar__label  progressbar__label--repos"},"Git Use \u2014 ",r.createElement("span",null,this.props.repoScore),"%")));var e}}]),t}(r.Component)),v=(a(55),a(38).a.div({closed:{height:0},open:{height:"auto"}})),f=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).checkDataSet=function(e){e.target.dataset.id&&a.setState({open:a.state.open!==e.target.dataset.id&&+e.target.dataset.id}),e.target.dataset.name&&a.setState({ulOpen:(a.state.ulOpen,e.target.dataset.name,e.target.dataset.name)})},a._onTabClick=function(e){var t=+e.target.dataset.id;a.setState({tabs:a.state.tabs.map(function(e,a){return{isActive:t===a}})})},a._tabsData=e.repos,a.state={tabs:a._tabsData.map(function(e,t){return{isActive:0===t}}),open:!1,ulOpen:"ul-1"},a}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this;return n.a.createElement("dl",{className:"tabs-list",key:"tabs-list"},this._tabsData.map(function(t,a){var r=e.state.tabs[a].isActive?" ".concat("tabs-list__tab--active"):"",s=n.a.createElement("div",{onClick:e.checkDataSet},n.a.createElement("h3",null,"Total Repository score: ",t.totalRepoScore,"%"),n.a.createElement("p",{className:"stats__description"}," This is accumulated based on following factors: "),n.a.createElement("div",{className:"stats__repos"},n.a.createElement("ul",{"data-name":"ul-1",className:"stats__header "+("ul-1"===e.state.ulOpen?"stats__header--active":"")}," General",n.a.createElement("li",null,n.a.createElement("ul",{className:"stats-breakdown "+("ul-1"===e.state.ulOpen?"stats-breakdown--active":"")},n.a.createElement("li",{"data-id":a+1,className:e.state.open===a+1?"stats-breakdown__item--active":"stats-breakdown__item"}," Description: ",t.description?"100%":"0%",n.a.createElement(v,{className:"content",pose:e.state.open===a+1?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," Although there isn\u2019t a format for a good repository description, it is a way to provide a summary of a where the project is about and which stack and tools are used. It is show on your main page below the repository name."))),n.a.createElement("li",{"data-id":a+2,className:e.state.open===a+2?"stats-breakdown__item--active":"stats-breakdown__item"}," Readme: ",t.repoReadMe<100?"0%":"100%",n.a.createElement(v,{className:"content",pose:e.state.open===a+2?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," A README file is important to your repository because it tells other people why your project is useful, what they can do with your project, and how they can use it. Without a readme, no one is going to look at you code."))),n.a.createElement("li",{"data-id":a+3,className:e.state.open===a+3?"stats-breakdown__item--active":"stats-breakdown__item"}," Gitignore: ",t.gitIgnoreScore<100?"0%":"100%",n.a.createElement(v,{className:"content",pose:e.state.open===a+3?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," A .gitignore file is used to for GIT to know which files to ignore before making a commit. It is, for example, very important to include your /node_modelus because when running npm install to start your app node will install different versions depending on the computer you work.")))))),n.a.createElement("ul",{"data-name":"ul-2",className:"stats__header "+("ul-2"===e.state.ulOpen?"stats__header--active":"")}," Branches",n.a.createElement("li",null,n.a.createElement("ul",{className:"stats-breakdown "+("ul-2"===e.state.ulOpen?"stats-breakdown--active":"")},n.a.createElement("li",{"data-id":a+5,className:e.state.open===a+5?"stats-breakdown__item--active":"stats-breakdown__item"}," Master branch: ",t.branchScore.hasMasterBranch,n.a.createElement(v,{className:"content",pose:e.state.open===a+5?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," \u2018master\u2019 is considered to be the main branch where the source code of HEAD always reflects a production-ready state."))),n.a.createElement("li",{"data-id":a+6,className:e.state.open===a+6?"stats-breakdown__item--active":"stats-breakdown__item"}," Development branch: ",t.branchScore.hasDevelopmentBranch,"%:",n.a.createElement(v,{className:"content",pose:e.state.open===a+6?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," \u2018development\u2019 is considered to be the main branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release. Some would call this the \u201cintegration branch\u201d."))),n.a.createElement("li",{"data-id":a+7,className:e.state.open===a+7?"stats-breakdown__item--active":"stats-breakdown__item"}," Feature branches: ",t.branchScore.hasFeatBranch,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+7?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," feature branches are among the \u2018supporting branches\u2019. These branches are you to work on features and unlike the main branches, these branches always have a limited life time, since they will be removed eventually."))),n.a.createElement("li",{"data-id":a+8,className:e.state.open===a+8?"stats-breakdown__item--active":"stats-breakdown__item"}," Number of branches: ",t.branchScore.hasThreeBranches,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+8?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," You should have at least three branches on your repository."))),n.a.createElement("li",{"data-id":a+9,className:e.state.open===a+9?"stats-breakdown__item--active":"stats-breakdown__item"}," Naming: ",t.branchScore.useDescriptiveNames,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+9?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," All branches, including supporting branches have naming conventions. They should start with master, development, feature, bug, hotfix or junk."))),n.a.createElement("li",{"data-id":a+4,className:"stats-breakdown__points"}," Total branches score: ",t.branchScore.totalScore,"%")))),n.a.createElement("ul",{"data-name":"ul-3",className:"stats__header "+("ul-3"===e.state.ulOpen?"stats__header--active":"")}," Commits",n.a.createElement("li",null,n.a.createElement("ul",{className:"stats-breakdown "+("ul-3"===e.state.ulOpen?"stats-breakdown--active":"")},n.a.createElement("li",{"data-id":a+11,className:e.state.open===a+11?"stats-breakdown__item--active":"stats-breakdown__item"},' Commits with "and": ',t.commitScore.containsAND,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+11?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," If you have to add an \u201cand\u201d in your commit message, you\u2019ve already committed too much."))),n.a.createElement("li",{"data-id":a+12,className:e.state.open===a+12?"stats-breakdown__item--active":"stats-breakdown__item"}," Commits with period: ",t.commitScore.containsPeriod,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+12?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," Don\u2019t end the commit with a period. Save your characters."))),n.a.createElement("li",{"data-id":a+13,className:e.state.open===a+13?"stats-breakdown__item--active":"stats-breakdown__item"}," Length of commits: ",t.commitScore.lengthExceeds,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+13?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," The commit title should be less than 50 characters. Shorter things are easier to read."))),n.a.createElement("li",{"data-id":a+14,className:e.state.open===a+14?"stats-breakdown__item--active":"stats-breakdown__item"}," First word of commit starting with uppercase ",t.commitScore.upperCase,"%",n.a.createElement(v,{className:"content",pose:e.state.open===a+14?"open":"closed"},n.a.createElement("div",{className:"content-wrapper"}," This is seen as generally good conduct by most gitsperts. Sentence case is also more professional looking and easier to read."))),n.a.createElement("li",{"data-id":a+10,className:"stats-breakdown__points"}," Total commits score: ",t.commitScore.totalScore,"% "))))));return n.a.createElement(n.a.Fragment,{key:"tabgroup-"+a},n.a.createElement("dt",{className:"tabs-list__tab"+r,onClick:e._onTabClick,key:"tablink-"+a,"data-id":a},t.name),n.a.createElement("dd",{className:"tabs-list__content",key:"tabcontent-"+a},s))}))}}]),t}(n.a.Component),_=a(23),w=a(33),N=a.n(w),k=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).getProfileScore=function(e){var t=e.map(function(e){return e.profileScore});return[].concat(Object(_.a)(t),[a.props.currentProfileScore])},a.getGitScore=function(e){var t=e.map(function(e){return e.gitScore});return[].concat(Object(_.a)(t),[a.props.currentGitScore])},a.getDates=function(e){var t={year:"numeric",month:"numeric",day:"numeric"},a=e.map(function(e){return new Date(parseInt(e.createdAt)).toLocaleDateString("en-GB",t)});return[].concat(Object(_.a)(a),[(new Date).toLocaleDateString("en-GB",t)])},a.state={options:{chart:{width:350,type:"bar",stacked:!0,zoom:{enabled:!0}},colors:["#37867E","#99EE86"],responsive:[{breakpoint:480,options:{legend:{position:"bottom",offsetX:-10,offsetY:0}}}],plotOptions:{bar:{horizontal:!1}},xaxis:{categories:a.getDates(a.props.previousScores)},legend:{position:"top",offsetY:0},fill:{opacity:1}},series:[{name:"Profile score",data:a.getProfileScore(a.props.previousScores)},{name:"Git Use score",data:a.getGitScore(a.props.previousScores)}]},a}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return r.createElement("div",{className:"app"},r.createElement("div",{className:"row"},r.createElement("div",{className:"mixed-chart"},r.createElement(N.a,{options:this.state.options,series:this.state.series,type:"bar",height:"350"}))))}}]),t}(r.Component),y=function(e){return e?r.createElement("img",{src:a(61),alt:"checked",width:"30px",height:"30px"}):r.createElement("img",{src:a(62),alt:"not-checked",width:"30px",height:"30px"})};function S(e){console.log(e);var t=e.user.profileStats;return r.createElement("div",{className:"row"},r.createElement("div",{className:"col-1-of-3"},r.createElement(E,{username:e.user.username,profileScore:e.user.profileScore,repoScore:e.user.repoScore,score:e.user.score}),e.user&&null!==e.user.stats.totalPinnedRepos&&r.createElement("section",{className:"stats__average"},r.createElement("h2",null," GitHub & Git statistics "),r.createElement("p",null," ","Total pinned repositories: ",e.user.stats.totalPinnedRepos," "),r.createElement("p",null," ","Average number of branches:"," ",e.user.stats.averageBranchPerRepo),r.createElement("p",null," ","Average commits per branch:"," ",e.user.stats.averageCommitPerBranch)),e.user.previousScores&&e.user.previousScores.length>0&&r.createElement(k,{previousScores:e.user.previousScores,currentProfileScore:e.user.profileScore,currentGitScore:e.user.repoScore})),r.createElement("div",{className:"col-2-of-3"},r.createElement("section",{className:"stats__profile"},r.createElement("h2",{className:"stats__profile-header"}," Profile Statistics "),e.user&&0!==e.user.profileStats&&r.createElement("div",{className:"stats__profile-container"},r.createElement("div",{className:"stats__profile-item",key:"bio"},y(t.bio),r.createElement("p",{className:"stats__item-name"},"Bio")),r.createElement("div",{className:"stats__profile-item",key:"email"},y(t.email),r.createElement("p",{className:"stats__item-name"},"Email")),r.createElement("div",{className:"stats__profile-item",key:"isHireable"},y(t.isHireable),r.createElement("p",{className:"stats__item-name"},"Available for hire")),r.createElement("div",{className:"stats__profile-item",key:"location"},y(t.location),r.createElement("p",{className:"stats__item-name"},"Location")),r.createElement("div",{className:"stats__profile-item",key:"name"},y(t.name),r.createElement("p",{className:"stats__item-name"},"Name")),r.createElement("div",{className:"stats__profile-item",key:"picture"},y(t.picture),r.createElement("p",{className:"stats__item-name"},"Profile photo")),r.createElement("div",{className:"stats__profile-item",key:"website"},y(t.websiteUrl),r.createElement("p",{className:"stats__item-name"},"Personal website")),r.createElement("div",{className:"stats__profile-item",key:"pinnedRepositories"},y(t.pinnedRepositories),r.createElement("p",{className:"stats__item-name"},"Pinned repositories"))),e.user.profileScore<49&&r.createElement("p",{className:"stats__improve"},"To improve your GitHub appearence manage your"," ",r.createElement("a",{className:"stats__link",href:"https://github.com/settings/profile",target:"_blank",rel:"noopener noreferrer"},"settings"))),e.user&&null!==e.user.stats.totalPinnedRepos&&r.createElement("section",{className:"stats__pinnedRepos"},r.createElement("h2",null," Git Use "),r.createElement("p",null,"Click to check your detailed feedback per repository"),e.user.stats.repoNames&&r.createElement(f,{repos:e.user.stats.repoNames})),e.user&&!e.user.stats.totalPinnedRepos&&r.createElement("p",null," Please add some pinned repositories ")))}a(63);function O(){return r.createElement("div",{"aria-busy":"true","aria-label":"Loading",role:"progressbar",className:"container"},r.createElement("div",{className:"swing"},r.createElement("div",{className:"swing-l"}),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",{className:"swing-r"})),r.createElement("div",{className:"shadow"},r.createElement("div",{className:"shadow-l"}),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",null),r.createElement("div",{className:"shadow-r"})))}function j(e){return r.createElement("div",null,r.createElement("form",{className:"form",onSubmit:e.onSubmit},r.createElement("input",{className:"form__username",type:"text",name:"search",id:"1",placeholder:"enter your username",onChange:e.onChange}),r.createElement("button",{className:"form__submit",type:"submit"}," ","Go!"," ")),r.createElement(d.b,{query:g,skip:""===e.username,variables:{username:e.username}},function(e){var t=e.loading,a=e.error,n=e.data;return t?r.createElement(O,null):a?r.createElement("div",{className:"errorBox"},r.createElement("p",null,"Please submit valid username ")):r.createElement("div",null," ",n&&r.createElement(S,{user:n.user}))}))}a(69),a(70);function G(e){return r.createElement("section",{className:"landing-page"},r.createElement("div",{className:"landing-page__header"},r.createElement("p",{className:"logo"},"GitGud"),r.createElement("p",null,"A validator of your GitHub profile and Git use "),r.createElement("p",null,"designed to provide feedback for job seekers and graduated students")),r.createElement("div",{className:"landing-page__description"},r.createElement("h2",null,"HOW"),r.createElement("p",null,r.createElement("b",null,"First it checks your public profile")," - A good GitHub profile can impress the interviewer."),r.createElement("b",null,"Second it validates your pinned repositories on how you use Git"),"- Proper use of version control with Git can show that you are a structured worker and is able to work in development teams. We chose to focus on your pinned repos because you can present certain project as you portfolio for potential employers"),r.createElement("div",{className:"landing-page__description"},r.createElement("h2",null,"WHY"),r.createElement("p",null,"You can use GitHub as your resume for job hunting. For developers it is important to code regularly, be able to work in teams, communicate properly and contiue with a learning curve. Obviously this is something you say you can do and write it on your resume, but with GitHub you are able to show that you can do this. Which will give you headsup on your next interview."),r.createElement("p",null,"Unfortunately many recent graduates or job seekers lack a proper GitHub profile. And as Codaisseur teachers can acknowledge, the feedback seems repetitive. Therefore we developed this tool to provide this feedback which is based on various resources accross the internet and using live data from the GitHub API."," ")),r.createElement("div",{className:"landing-page__description"},r.createElement("h2",null,"WHO"),r.createElement("p",null,"As three graduates of the Codaisseur Academy in Amsterdam we developed this tool from scratch with Rein op \u2018t Land - a teacher and developer at Codaisseur - who acted as our Product Owner"),r.createElement("h2",{className:"contributors"},"CONTRIBUTORS"),r.createElement("div",{className:" profiles"},r.createElement("div",{className:"profile"},r.createElement("img",{src:"https://media.licdn.com/dms/image/C4D03AQHZVf98b8_9rQ/profile-displayphoto-shrink_800_800/0?e=1560988800&v=beta&t=GJsvLqPTRx9mVyd6mJV-vfNWvZiWeTfkMRM12kTgnh0",alt:"Oleksandra"}),r.createElement("h3",null,"Oleksandra Akulshyna"),r.createElement("a",{href:"https://www.linkedin.com/in/akulshyna/",rel:"noopener noreferrer",target:"_blank"},"LinkedIn"),r.createElement("a",{href:"https://github.com/w3bgir1",rel:"noopener noreferrer",target:"_blank"},"GitHub")),r.createElement("div",{className:"profile"},r.createElement("img",{src:"https://media.licdn.com/dms/image/C4E03AQHbh18z_ce4NA/profile-displayphoto-shrink_200_200/0?e=1560988800&v=beta&t=Sdjy4ObNeIBXtc4oVvJOeSUeG6oXsw8_0K0pKRwRYZM",alt:"Vincent"}),r.createElement("h3",null,"Vincent de Graaf"),r.createElement("a",{href:"https://www.linkedin.com/in/vincent-de-graaf-7a5375a4/",rel:"noopener noreferrer",target:"_blank"},"LinkedIn"),r.createElement("a",{href:"https://github.com/vdegraaf",rel:"noopener noreferrer",target:"_blank"},"GitHub")),r.createElement("div",{className:"profile"},r.createElement("img",{src:"https://media.licdn.com/dms/image/C4D03AQFJAEpuEOJn2A/profile-displayphoto-shrink_800_800/0?e=1560988800&v=beta&t=Pfb7rIZKrgWPpbpcfP7Q9mVhO1mui-t5HSrgzXe6Bgc",alt:"Natalia"}),r.createElement("h3",null,"Natalia Volchatova"),r.createElement("a",{href:"https://www.linkedin.com/in/nataliavolchatova/",target:"_blank",rel:"noopener noreferrer"},"LinkedIn"),r.createElement("a",{href:"https://github.com/Klackky",rel:"noopener noreferrer",target:"_blank"},"GitHub")))))}var P=function(e){function t(e){var a;return Object(c.a)(this,t),(a=Object(l.a)(this,Object(m.a)(t).call(this,e))).onChange=function(e){a.setState({search:e.target.value})},a.onSubmit=function(e){e.preventDefault(),a.setState({username:a.state.search,landingPage:!1})},a.state={search:"",username:"",landingPage:!0},a}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return this.state.landingPage?n.a.createElement("div",null,n.a.createElement(j,{username:this.state.username,onSubmit:this.onSubmit,onChange:this.onChange}),n.a.createElement(G,null)):n.a.createElement(j,{username:this.state.username,onSubmit:this.onSubmit,onChange:this.onChange})}}]),t}(n.a.Component);a(71);function C(){return r.createElement("button",{id:"popup",className:"feedback-button",onClick:function(){window.open("https://github.com/Official-Codaisseur-Graduate/git-gud/issues","_blank")}},"Feedback")}var A=function(e){function t(){return Object(c.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(p.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",{className:"App"},n.a.createElement(P,null),n.a.createElement(C,null))}}]),t}(r.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var D=a(14),R=a(39),x=a(40),B={uri:"https://gitgudserver.herokuapp.com/graphql"},H=new D.a({link:new R.a(B),cache:new x.a,defaultOptions:{watchQuery:{fetchPolicy:"network-only"},query:{fetchPolicy:"network-only"}}});o.a.render(n.a.createElement(d.a,{client:H},n.a.createElement(A,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[42,1,2]]]);
//# sourceMappingURL=main.2e08129d.chunk.js.map